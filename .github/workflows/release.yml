name: "Build & Release Electron App"

on:
  pull_request:
    branches:
      - main
    types:
      - closed
 
env:
  NODE_VERSION: '18.x'

jobs:
  build-frontend:
    name: "🔨 Build Frontend (Vite + React)"
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    outputs:
      dist-path: ${{ steps.build.outputs.dist-path }}
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: "Setup Node.js"
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: "Install dependencies"
        run: npm ci

      - name: "Build Vite"
        id: build
        run: |
          npm run build
          echo "dist-path=$(pwd)/dist" >> $GITHUB_OUTPUT

      - name: "Upload dist as artifact"
        uses: actions/upload-artifact@v4
        with:
          name: vite-dist
          path: dist

  build-electron:
    needs: build-frontend
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Download frontend build
        uses: actions/download-artifact@v4
        with:
          name: vite-dist
          path: dist     # ← this recreates the dist/ folder
      - name: Copy frontend build to Electron
        run: |
          mkdir -p public
          cp -r dist/* public/
      - name: Build Electron App
        run: |
          npx electron-builder --linux --mac --win --publish never
      - uses: actions/upload-artifact@v4
        with:
          name: electron-app
          path: dist_electron/*.AppImage

  release:
    name: "🚀 Create GitHub Release"
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    needs: build-electron
    steps:
      - name: "Checkout code (to read package.json)"
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: "Setup Node.js"
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: "Get version from package.json"
        id: get_version
        run: |
          echo "version=$(node -p \"require('./package.json').version\")" >> $GITHUB_OUTPUT

      - name: "Download Electron artifact"
        uses: actions/download-artifact@v4
        with:
          name: electron-app
          path: ./release-assets

      - name: "Create GitHub Release"
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          name: "Release v${{ steps.get_version.outputs.version }}"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: "Upload Release Assets"
        uses: softprops/action-gh-release@v1
        with:
          files: ./release-assets/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
